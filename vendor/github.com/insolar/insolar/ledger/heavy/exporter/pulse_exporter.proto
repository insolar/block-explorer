syntax = "proto3";

package exporter;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/insolar/insolar/insolar/node.proto";

service PulseExporter {
    rpc Export (GetPulses) returns (stream Pulse) {
    }
    rpc TopSyncPulse (GetTopSyncPulse) returns (TopSyncPulseResponse) {
    }
}

message GetTopSyncPulse {
}

message TopSyncPulseResponse {
    uint32 Polymorph = 16;

    uint32 PulseNumber = 20;
}


message GetPulses {
    uint32 Polymorph = 16;

    bytes PulseNumber = 20 [(gogoproto.customtype) = "github.com/insolar/insolar/insolar.PulseNumber", (gogoproto.nullable) = false];
    uint32 Count = 22;
}

message Pulse {
    uint32 Polymorph = 16;

    bytes PulseNumber = 20 [(gogoproto.customtype) = "github.com/insolar/insolar/insolar.PulseNumber", (gogoproto.nullable) = false];
    bytes Entropy = 21 [(gogoproto.customtype) = "github.com/insolar/insolar/insolar.Entropy", (gogoproto.nullable) = false];
    int64 PulseTimestamp = 22;

    repeated insolar.Node Nodes = 23 [(gogoproto.nullable) = false];
}


