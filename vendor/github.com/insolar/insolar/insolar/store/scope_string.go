// Code generated by "stringer -type=Scope"; DO NOT EDIT.

package store

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ScopePulse-1]
	_ = x[ScopeRecord-2]
	_ = x[ScopeJetDrop-3]
	_ = x[ScopeIndex-4]
	_ = x[ScopeLastKnownIndexPN-5]
	_ = x[ScopeGenesis-6]
	_ = x[ScopeJetTree-7]
	_ = x[ScopeJetKeeper-8]
	_ = x[ScopeJetKeeperSyncPulse-9]
	_ = x[ScopeRecordPosition-10]
	_ = x[ScopeBackupStart-11]
	_ = x[ScopeDBInit-12]
	_ = x[ScopeNodeHistory-13]
}

const _Scope_name = "ScopePulseScopeRecordScopeJetDropScopeIndexScopeLastKnownIndexPNScopeGenesisScopeJetTreeScopeJetKeeperScopeJetKeeperSyncPulseScopeRecordPositionScopeBackupStartScopeDBInitScopeNodeHistory"

var _Scope_index = [...]uint8{0, 10, 21, 33, 43, 64, 76, 88, 102, 125, 144, 160, 171, 187}

func (i Scope) String() string {
	i -= 1
	if i >= Scope(len(_Scope_index)-1) {
		return "Scope(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Scope_name[_Scope_index[i]:_Scope_index[i+1]]
}
