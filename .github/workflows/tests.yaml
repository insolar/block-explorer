name: tests
on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 2 * * *
  pull_request:

env:
  GO_VERSION: 1.14
  CI_GOMAXPROCS: 0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        with:
          go-version: ${{env.GO_VERSION}}
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Build
        run: make all
  unit:
    name: Unit tests
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/block-explorer/block-explorer/go
    steps:
      - name: set pull_request run params
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        run: |
          echo "::set-env name=TEST_COUNT::10"
      - name: set scheduled run params
        if: github.event_name == 'schedule'
        run: |
          echo "::set-env name=TEST_COUNT::1000"
          echo "::set-env name=TEST_ARGS::-timeout 60m"
      - name: set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Check out code into the Go module directory
        uses: actions/checkout@master
        with:
          path: go/src/github.com/insolar/block-explorer
          fetch-depth: 1
      - name: Test
        run: make mod unit
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/block-explorer/block-explorer/go
    steps:
      - name: set pull_request run params
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        run: |
          echo "::set-env name=TEST_COUNT::10"
      - name: set scheduled run params
        if: github.event_name == 'schedule'
        run: |
          echo "::set-env name=TEST_COUNT::1000"
          echo "::set-env name=TEST_ARGS::-timeout 240m"
      - name: set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Check out code into the Go module directory
        uses: actions/checkout@master
        with:
          path: go/src/github.com/insolar/block-explorer
          fetch-depth: 1
      - name: Test
        run: make mod integration
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
  test-with-mock:
    name: heavy mock integration tests
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/block-explorer/block-explorer/go
    steps:
      - name: set push_to_master run params
        if: github.event_name == 'push'
        run: |
          echo "::set-env name=TEST_COUNT::10"
          echo "::set-env name=TEST_ARGS::-timeout 30m -json"
      - name: set pull_request run params
        if: github.event_name == 'pull_request'
        run: |
          echo "::set-env name=TEST_COUNT::10"
          echo "::set-env name=TEST_ARGS::-timeout 30m"
      - name: set scheduled run params
        if: github.event_name == 'schedule'
        run: |
          echo "::set-env name=TEST_COUNT::100"
          echo "::set-env name=TEST_ARGS::-timeout 240m -json"
      - name: set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Check out code into the Go module directory
        uses: actions/checkout@master
        with:
          path: go/src/github.com/insolar/block-explorer
          fetch-depth: 1
      - name: go mod download
        run: make mod
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
      - name: test
        run: make test-heavy-mock-integration
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
      - name: Install testrail-cli
        if: github.event_name == 'push' || github.event_name == 'schedule'
        run: |
          go get -v -u github.com/insolar/testrail-cli
          cd testrail-cli && go install cmd/testrail-cli/testrail-cli.go
        working-directory: ${{env.GOPATH}}/src/github.com/insolar
      - name: Publish tests results to testrail
        if: github.event_name == 'push' || github.event_name == 'schedule'
        env:
          TR_USER: ${{ secrets.TR_USER }}
          TR_PASSWORD: ${{ secrets.TR_PASSWORD }}
        run: make publish_tests
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
  test-with-coverage:
    name: tests with coverage
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/block-explorer/block-explorer/go
    steps:
      - name: set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Check out code into the Go module directory
        uses: actions/checkout@master
        with:
          path: go/src/github.com/insolar/block-explorer
          fetch-depth: 1
      - name: Add bin to path
        run: echo "::add-path::${{env.GOPATH}}/bin"
      - name: Test
        run: make go-acc all test-with-coverage
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash) -f coverage.out -y .codecov.yml -n coverage-report
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
  golangci-lint:
    name: Run golangci-lint
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/block-explorer/block-explorer/go
    steps:
      - name: set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Check out code into the Go module directory
        uses: actions/checkout@master
        with:
          path: go/src/github.com/insolar/block-explorer
          fetch-depth: 1
      - name: Add bin to path
        run: echo "::add-path::${{env.GOPATH}}/bin"
      - name: Install golangci
        run: make all golangci
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
      - name: Run golangci-lint
        run: make lint
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/block-explorer
  migrate:
    name: Test migrate command
    runs-on: ubuntu-latest
    steps:
      - name: set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        with:
          go-version: ${{env.GO_VERSION}}
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Migrate
        run: |
          make all
          make config
          make docker_postgresql
          make migrate
